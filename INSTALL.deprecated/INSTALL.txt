$usepop/INSTALL/INSTALL.txt
Aaron Sloman
http://www.cs.bham.ac.uk/~axs/
17 Jan 2005

Updated 2 Dec 2008
Alter references to 'setarch'

Update 6 Nov 2008: This is now all subsumed by the startup scripts
provided in
    http://www.cs.bham.ac.uk/research/projects/poplog/v15.62
    get-and-install
    get-and-install-here
    INSTALL_BHAM_LINUX_POPLOG

It should no longer be necessary to use 'setarch' or 'popsetarch'.

However, if you get segmentation faults when trying to start pop11,
xved, prolog etc. you can try

    popsetarch pop11
    popsetarch xved
    popsetarch prolog

etc.

The script 'popsetarch' is defined in

    $usepop/pop/pop/popsetarch

It runs your command with the prefix 'setarch i386 -R' .

===================================================================
Instructions for installing Linux Poplog V15.62 after the tar file
has been unpacked into the intended directory $usepop, e.g.
    /usr/local/poplog/v15.62

Run this script

    ./CHECK_LINUX_FACILITIES

An executable shell script that can tell whether you can link
poplog on your system and whether the required X window system
libraries are present. In some cases it can fix things, provided
it is run as super-user (root). Problems it can report include

    gcc not available (prevents re-linking poplog)

    motif not available (requires linking non-motif poplog)

    motif and other X11 library files available but only with
    numerical suffixes, e.g. libXm.so.3, not libXm.so
    (if run as root it can install links without the suffixes)

If you don't have gcc that will interfere with many other things so you
could find out how to get it from your linux installation cd or your
linux provider. If you don't have gcc a default version of poplog
provided will work, which does not provide access to motif facilities.
If you need a pre-linked version of poplog which does use motif,
ask for help via pop-forum AT cs.bham.ac.uk or the comp.lang.pop
news group.

Users should not attempt to run the scripts whose names start with
'LINK_', i.e.

    LINK_LIKE_BHAM
    LINK_LIKE_CORE
    LINK_MOTIF_POPLOG
    LINK_NOMOTIF_POPLOG
    LINK_USING_NEWPOP

These are subsidiary scripts used by the scripts described below.

After checking that you have appropriate facilities on your
linux machine, select ONE of the 'USERLINK' scripts to run, as follows,
redirecting output to link.log so that standard information printed
out is available later for diagnostic purposes.

    ./USERLINK_BHAM_MOTIF_POPLOG > link.log
        link and set up poplog with motif and Birmingham defaults
        (This should be the default for most people who have motif)

    ./USERLINK_BHAM_NOMOTIF_POPLOG > link.log
        link and set up poplog without motif and Birmingham defaults
        (This should be the default for most people who do not have
        motif)

    ./USERLINK_ORIGINAL_MOTIF_POPLOG > link.log
        link and set up poplog with motif and Sussex/ISL defaults

    ./USERLINK_ORIGINAL_NOMOTIF_POPLOG > link.log
        link and set up poplog without motif and Sussex/ISL defaults

The 'BHAM' versions of the script use this file to create saved
images
    $popcom/mkstartup.bham

The 'ORIGINAL' versions of the script use this file
    $popcom/mkstartup.core

In both cases the selected file is copied to $popcom/mkstartup before
the 'newpop' command is run.

If you wish to create your own default startup saved image (invoked by
running pop11), make a copy of

    $popcom/mkstartup

e.g.
    $popcom/mkstartup.mine

then edit it, and run it.

Then run your chosen selection of scripts to create additional
saved images, e.g.

    $popcom/mkxved
        create image to run xved based on the startup image

    $popcom/mkclisp
        make common lisp saved image based on the startup image

    $popcom/mkplog
        make prolog saved image  based on the startup image

    $popcom/mkpml
        make pml (ML) saved image  based on the startup image

    $popcom/mkxvedpro
        version of xved with prolog loaded

    $popcom/mkxvedlisp
        version of xved with lisp loaded

Other sample scripts are available in the same directory.

Example:
    $popcom/mkgblocks
        Creates $popsavelib/gblocks.psv
        It uses the rc_blocks library that is part of the RCLIB
        package to produce a simplified version of a famous
        AI program of around 1972, namely Winograd's SHRDLU
        The saved image can be run as
            pop11 +gblocks

(To be continued)
